// para las imagenes que usan cover y estan dentro de una caja contenedora
@mixin img_100($widht, $height){
    position: relative;
    width: $widht;
    height: $height;
    object-fit: cover;
}

//para las cajas contenedoras dentro de una reolativa.. como en el caso de las targetas de los programas.
@mixin caja_abs_top($a, $b, $c ,$d){
    position: absolute;
    width: $a;
    height: $b;

    @if $d == t {
        top: $c;
    } @else if $d == b{
        bottom: $c;
    } 
} 

//mixin para flexbox general
@mixin caja_flex($al_content, $j_content, $al_item, $direccion:row, $wrap:wrap ) {
    display: flex;
    flex-direction: $direccion;
    flex-wrap: $wrap;
    align-content: $al_content;
    justify-content: $j_content;
    align-items: $al_item;
    
}

//permite añadir una caja relativa y posicionarla, si se ingrea en la penultima posicion "mw" se toma un valor final como min width
@mixin caja_relative($ancho, $alto, $margen:auto, $padding:auto,$m:unset ,$min_widht:unset){
    position: relative;
    width: $ancho;
    height: $alto;
    margin: $margen;
    padding: $padding;
    @if ($m == mw ) {
        min-width: $min_widht;
    }
}

@mixin grid_gen($g_t_col_1, $g_t_col_2, $g_t_row_1, $g_t_row_2, $gap){
    display: grid;
    grid-template-columns: repeat($g_t_col_1 , $g_t_col_2);
    grid-template-rows: repeat($g_t_row_1 , $g_t_row_2);
    gap: $gap;
}
//mixin sin parametros ya que nos faltaba uno de este tipo 
@mixin ancho_general() {
    width: 80%;
    
    @media screen and (max-width: $xl){
        width: 90%;
    }
    @media screen and (max-width: $lg){
        width: 96%;
    }
    @media screen and (max-width: $md){
        width: 98%;
    }
    @media screen and (max-width: $sm){
        width: 94%;
    }
}

@mixin sombra_cajas() {
    -webkit-box-shadow: var(--sombra_general);
    -moz-box-shadow: var(--sombra_general);
    box-shadow: var(--sombra_general);
}

@mixin resaltado_strong() {
    font-weight: 700;
    color: var(--color_strong);
}

@mixin textos_principales() {
    h1,h2 {
        display: block;
        width: 100%;
        font-family: $titulo;
        font-size: 2.8rem;
        font-weight: 500;
        color: var(--color_p);
        text-transform: capitalize;
    }

    p {
        display: block;
        width: 100%;
        font-family: $parrafo;
        font-size: 1.2rem;
        color: var(--color_p);
            
        strong {
            @include resaltado_strong();
        }
    }

    @media screen and (max-width: $xl) {
        h1, h2 {
            font-size: 2.5rem;
        }
        
        p {
            font-size: 1.3rem;
        }
        
    }
    
    @media screen and (max-width: $lg){
        h1, h2 {
            font-size: 2.2rem;
        }
        
        p {
            font-size: 1.2rem;
        }
    }
    @media screen and (max-width: $md){
        h1, h2 {
            font-size: 2rem;
        }
        
        p {
            font-size: 1.2rem;
            
        }
    }
    @media screen and (max-width: $sm){
        h1, h2 {
            font-size: 1.8rem;
        }
        
        p {
            font-size: 1.1rem;
            
        }
    }
}

//érmite añadir una fuente su peso, tamaño , aliniacion y color, si no se pasa color o animacion quedan inerit
//tambien va adaptando la fuente restandole valor en rem  
@mixin fuente_gen($fuente, $f_weight, $f_size, $align, $color:inerit) {
    font-family: $fuente;
    font-size: $f_size;
    font-weight: $f_weight;
    text-align: $align;
    color: $color;

    @media screen and (max-width: $xl) {
        @if ($f_weight > 400 ) && ($f_size > 1rem ){
            font-weight:300;
            font-size: calc(#{$f_size} - .1rem);
        }
    }
    
    @media screen and (max-width: $lg){
        font-size: calc(#{$f_size} - .1rem);

    }
    @media screen and (max-width: $md){
        @if ($f_weight >= 400 ) && ($f_size > 1rem ){
            font-size: calc(#{$f_size} - .2rem);
        }
    }
    @media screen and (max-width: $sm){
        font-size: calc(#{$f_size} - .3rem);
    }
}
/*permite que el titulo contenido e imagenes del comienzo se ajusten una al alado de la otra y se mantenga la misma disposiciones para todas las paginas.
ademas de hacer responsive tanto la caja como a sus hijos, incluyendo texto e img
*///puede se usadoo como componente
@mixin titulo_mas_img ($caja_cont, $caja_hija){
    #{$caja_cont} {
        width: 100%;
        height: 300px;
        margin-top: 100px;
        display: flex;
        flex-direction: row;
        flex-wrap: nowrap;
        align-content: center;
        justify-content: space-between;
        align-items: center;

        #{$caja_hija}{
            width: 60%;
            @include textos_principales(); 
        }
        img{
            height: 100%;
            object-fit: contain;
            filter: drop-shadow(5px 5px 4px var(--color_strong));
        }
    }
    
    @media screen and (max-width: $xl){
        
    }
    @media screen and (max-width: $lg){

    }
    @media screen and (max-width: $md){
        #{$caja_cont} {
            width: 100%;
            height: auto;
            flex-direction: column;
            flex-wrap: wrap;
            text-align: center;
            justify-content: center;
            align-items: center;
            
            #{$caja_hija}{
                width: 80%;
                @include textos_principales(); 
            }
            img{
                margin-top: 10px;
                width: 100%;
                height: 250px;
            }
        }

    }
    @media screen and (max-width: $sm){
        #{$caja_cont} {
            
            #{$caja_hija}{
                width: 100%;
            }
        }
    }
}



